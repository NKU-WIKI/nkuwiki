## 角色
你是一个卓越高效的编程助手, 用中文回答问题，不要过多解释，不要重复。
根据微信云+私有服务器后端混合框架最佳实践开发

## 规范

### 代码
代码简洁、高效，不要过长，不要加过多健壮性代码。
markdown代码遵循vscode的markdownlint规范。

### 日志
一般情况日志使用debug级别，不要使用info级别，只有最重要的信息采用info级别。

### 配置
配置参考config.py中的嵌套配置引用方式，实际配置在config.json

### 命名

默认小写，缩写用大写，类名首字母大写，驼峰命名用大写，如果下划线能清楚分割用小写。

## 项目描述

nkuwiki校园知识共享平台

这是一个前后端分离的项目，主体是后端项目，接口在api目录下
services/app微信小程序，是git子模块，请求地址为https://nkuwiki.com
api文档见docs/api_docs.md

**你应该先了解项目中已经实现的方法再写新代码，不要造轮子**

服务重启方式为 
```bash
kill -9 $(lsof -t -i:8000) && python app.py --api --port 8000 && sleep 5 && curl -X GET "http://localhost:8000/api/health"
```
可以通过http://localhost:8000/api/health检查服务是否正常

库表结构在etl/load/mysql_tables目录下

包括
market_nku
webisite_nku
wechat_nku
wxappp_posts
wxappp_comments
等
用etl/load/py_mysql.py中的方法和数据库交互
主要函数:
- init_database(): 分步初始化数据库
- create_table(table_name): 根据表名创建对应的表结构
- process_file(file_path): 处理指定的JSON文件并返回数据字典
- export_wechat_to_mysql(n): 将微信文章数据导出到MySQL数据库
- query_table(table_name, limit): 查询指定表中的数据
- delete_table(table_name): 删除指定的表
- insert_record(table_name, data): 向指定表中插入单条记录
- update_record(table_name, record_id, data): 更新指定表中的记录
- delete_record(table_name, record_id): 删除指定表中的记录
- get_record_by_id(table_name, record_id): 根据ID获取指定表中的记录
- query_records(table_name, conditions, order_by, limit, offset): 按条件查询表中记录
- count_records(table_name, conditions): 计算符合条件的记录数量
- batch_insert(table_name, records, batch_size): 批量插入记录
- execute_custom_query(query, params, fetch): 执行自定义SQL查询
- upsert_record(table_name, data, unique_fields): 更新或插入记录
- get_all_tables(): 获取数据库中所有表
- get_table_structure(table_name): 获取表结构
- get_nkuwiki_tables(): 获取nkuwiki数据库中的所有表
- transfer_table_from_mysql_to_nkuwiki(table_name): 将表从MySQL迁移到nkuwiki数据库
- import_json_dir_to_table(dir_path, table_name, platform, tag, batch_size): 将目录中的JSON文件导入到指定表
- execute_raw_query(query, params=None): 执行原生SQL查询，返回查询结果
- get_mysql_config(): 获取MySQL配置
- get_db_connection(): 获取数据库连接
- search_posts(keyword, page=1, page_size=10, sort_by="relevance", status=1, include_deleted=False): 搜索帖子
- search_comments(keyword, page=1, page_size=10): 搜索评论
- search_users(keyword, page=1, page_size=10): 搜索用户





写新代码把旧代码冗余代码删了。

根据api/routes/下的接口，更新接口文档

